{"version":3,"sources":["components/Navbar.jsx","views/Login.jsx","components/HandleProduct.jsx","views/NewProduct.jsx","components/ProtectedRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["MyNavbar","Navbar","bg","variant","Brand","href","Nav","className","Link","Button","Login","useState","serverErrors","setErrors","useForm","register","handleSubmit","formState","errors","onSubmit","e","xhr","XMLHttpRequest","open","setRequestHeader","withCredentials","onloadend","evt","target","status","window","location","includes","JSON","parse","response","message","send","stringify","onChange","type","autoComplete","maxLength","placeholder","ref","required","minLength","value","name","disabled","isSubmitting","style","display","key","HandleProduct","mode","reValidateMode","minLenghtMsg","chars","minLengthErr","NewProduct","ProtectedRoute","Component","component","requiresAuth","rest","isLoading","setLoading","isAuth","setAuth","verifyToken","Promise","resolve","reject","onload","useEffect","a","renderRoute","render","props","to","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"kQAkBeA,EAfE,WACf,OACE,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAA3B,UACE,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,wBACA,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUH,KAAK,YAAf,sBACA,cAACC,EAAA,EAAIE,KAAL,CAAUH,KAAK,eAAf,oBAEF,cAACI,EAAA,EAAD,CAAQF,UAAU,cAAcF,KAAK,SAArC,uB,wBCNS,SAASK,IAAS,IAAD,MACIC,mBAAS,MADb,mBACvBC,EADuB,KACTC,EADS,OAEwBC,cAA9CC,EAFsB,EAEtBA,SAAUC,EAFY,EAEZA,aAAcC,EAFF,EAEEA,UAAWC,EAFb,EAEaA,OAiB3C,OACE,qBAAKX,UAAU,kBAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,uBAAMY,SAAUH,GAnBP,SAACI,GAChB,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQ,oCAAoC,GACrDF,EAAIG,iBAAiB,eAAgB,oBACrCH,EAAII,iBAAkB,EACtBJ,EAAIK,UAAY,SAACC,GAAS,IAAD,EACG,MAAtBA,EAAIC,OAAOC,OAAgBC,OAAOC,SAAS1B,KAAO,aAC7C,CAAC,IAAK,KAAK2B,SAASL,EAAIC,OAAOC,SACtChB,EAAS,UAACoB,KAAKC,MAAMb,EAAIc,iBAAhB,aAAC,EAA0BC,UAExCf,EAAIgB,KAAKJ,KAAKK,UAAUlB,OASlB,UACE,uBACEmB,SARc,kBAAO3B,EAAeC,EAAU,MAAQ,MAStD2B,KAAK,OACLC,aAAa,MACbC,UAAU,KACVC,YAAY,kBACZC,IAAK7B,EAAS,CACZ8B,UAAU,EACVC,UAAW,CAAEC,MAAO,GAAIX,QAAS,0BAEnCY,KAAK,QAEP,uBACER,KAAK,SACLO,MAAM,OACNE,WAAUhC,EAAUiC,oBAI1B,qBACEC,MAAO,CACLC,SAAS,UAAAlC,EAAOmC,WAAP,eAAYjB,UAAWxB,EAAe,OAAS,QAE1DL,UAAU,oBAJZ,UAMG,UAAAW,EAAOmC,WAAP,eAAYjB,UAAWxB,S,UC0BnB0C,EA5EO,SAAC,GAAkB,IAAhBnC,EAAe,EAAfA,SAAe,EACKL,YAAQ,CACjDyC,KAAM,WACNC,eAAgB,aAFVzC,EAD8B,EAC9BA,SAAUC,EADoB,EACpBA,aAAcE,EADM,EACNA,OAK1BuC,EAAe,SAACd,EAAae,GAAd,gBAChBf,EADgB,6BACgBe,EADhB,WAGfC,EAAe,SAACX,EAAML,GAAiB,IAAD,EAC1C,OACQ,OAANzB,QAAM,IAANA,GAAA,UAAAA,EAAS8B,UAAT,eAAgBZ,WACT,OAANlB,QAAM,IAANA,OAAA,EAAAA,EAAS8B,KAAT,UAAqBL,EAArB,iBACD,MAIJ,OACE,uBAAMpC,UAAU,sBAAsBY,SAAUH,EAAaG,GAA7D,UACE,qBACEZ,UAAS,+BACPW,EAAO,YAAc,SAAW,YAFpC,SAKGyC,EAAa,WAAY,kBAE5B,qBACEpD,UAAS,+BACPW,EAAO,aAAe,SAAW,YAFrC,SAKGyC,EAAa,YAAa,qBAG7B,qBAAKpD,UAAU,uBAAf,SACE,uBACEyC,KAAK,WACLJ,IAAK7B,EAAS,CACZ8B,UAAU,EACVC,UAAW,CACTC,MAAO,EACPX,QAASqB,EAAa,eAAgB,MAG1CjB,KAAK,OACLG,YAAY,mBAGhB,qBAAKpC,UAAU,uBAAf,SACE,yBAAQqC,IAAK7B,EAAUiC,KAAK,SAA5B,UACE,wBAAQD,MAAM,cAAd,yBACA,wBAAQA,MAAM,SAAd,yBAGJ,qBAAKxC,UAAU,uBAAf,SACE,0BACEyC,KAAK,YACLJ,IAAK7B,EAAS,CACZ8B,UAAU,EACVC,UAAW,CACTC,MAAO,GACPX,QAASqB,EAAa,kBAAmB,OAG7Cd,YAAY,kBACZD,UAAU,WAGd,qBAAKnC,UAAU,uBAAf,SACE,cAACE,EAAA,EAAD,CAAQ+B,KAAK,SAAb,0B,MCtEO,SAASoB,IACtB,OACE,sBAAKrD,UAAU,0BAAf,UACE,qBAAKA,UAAU,oBAAf,yBACA,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,S,mDCyBOsD,EA9BQ,SAAC,GAAqD,IAAxCC,EAAuC,EAAlDC,UAAsBC,EAA4B,EAA5BA,aAAiBC,EAAW,8CAC1CtD,oBAAS,GADiC,mBACnEuD,EADmE,KACxDC,EADwD,OAEhDxD,oBAAS,GAFuC,mBAEnEyD,EAFmE,KAE3DC,EAF2D,KAIpEC,EAAc,kBAClB,IAAIC,SAAQ,SAACC,EAASC,GACpB,IAAMpD,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQ,wCAAwC,GACzDF,EAAII,iBAAkB,EACtBJ,EAAIqD,OAAS,SAACtD,GAAD,OAAOoD,EAAQpD,EAAEQ,OAAOC,SACrCR,EAAIgB,WAWR,OARAsC,qBAAU,WAAM,4CACd,sBAAAC,EAAA,6DACET,GAAW,GADb,SAESG,IAFT,2BAE4B,MAF5B,2BAEmCD,GAAQ,GAF3C,4CADc,uBAAC,WAAD,wBAKdQ,KACC,IAECX,EAAkB,MAEdE,IAAWJ,GAAkBI,GAAUJ,EACpC,cAAC,IAAD,2BAAWC,GAAX,IAAiBa,OAAQ,SAACC,GAAD,OAAW,cAACjB,EAAD,eAAeiB,QACnDX,IAAWJ,EAAqB,cAAC,IAAD,CAAUgB,GAAG,gBAC5CZ,GAAUJ,EAAqB,cAAC,IAAD,CAAUgB,GAAG,gBAAjD,G,QCHMC,EAjBH,WACV,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,EAAD,CACEC,OAAK,EACLC,KAAK,SACLpB,UAAWrD,EACXsD,cAAc,IAEhB,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,eAAepB,UAAWH,WCRrCwB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASf,OACP,cAAC,IAAMgB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.408932b7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\r\n\r\nconst MyNavbar = () => {\r\n  return (\r\n    <Navbar bg=\"light\" variant=\"light\">\r\n      <Navbar.Brand href=\"#home\">PaymentBot</Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"/products\">Products</Nav.Link>\r\n        <Nav.Link href=\"/new-product\">New</Nav.Link>\r\n      </Nav>\r\n      <Button className=\"float-right\" href=\"/login\">\r\n        Login\r\n      </Button>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default MyNavbar;\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/login.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function Login() {\r\n  const [serverErrors, setErrors] = useState(null);\r\n  const { register, handleSubmit, formState, errors } = useForm();\r\n\r\n  const onSubmit = (e) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", \"http://localhost:5000/auth/login\", true);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xhr.withCredentials = true;\r\n    xhr.onloadend = (evt) => {\r\n      if (evt.target.status === 200) window.location.href = \"/dashboard\";\r\n      else if ([404, 400].includes(evt.target.status))\r\n        setErrors(JSON.parse(xhr.response)?.message);\r\n    };\r\n    xhr.send(JSON.stringify(e));\r\n  };\r\n\r\n  const resetServerErrors = () => (serverErrors ? setErrors(null) : null);\r\n\r\n  return (\r\n    <div className=\"login-view body\">\r\n      <div className=\"login-view wrapper center\">\r\n        <div className=\"login-view box\">\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input\r\n              onChange={resetServerErrors}\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              maxLength=\"16\"\r\n              placeholder=\"Insert your key\"\r\n              ref={register({\r\n                required: true,\r\n                minLength: { value: 16, message: \"Key must be 16 chars\" },\r\n              })}\r\n              name=\"key\"\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Send\"\r\n              disabled={formState.isSubmitting ? true : false}\r\n            />\r\n          </form>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: errors.key?.message || serverErrors ? \"flex\" : \"none\",\r\n          }}\r\n          className=\"login-view errors\"\r\n        >\r\n          {errors.key?.message || serverErrors}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"../styles/handle_product.css\";\r\n\r\nconst HandleProduct = ({ onSubmit }) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onSubmit\",\r\n    reValidateMode: \"onSubmit\",\r\n  });\r\n\r\n  const minLenghtMsg = (placeholder, chars) =>\r\n    `${placeholder} must be at least ${chars} chars`;\r\n\r\n  const minLengthErr = (name, placeholder) => {\r\n    return (\r\n      errors?.[name]?.message ||\r\n      (errors?.[name] && `${placeholder} is required`) ||\r\n      null\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form className=\"handle-product form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div\r\n        className={`handle-product error ${\r\n          errors[\"prd-name\"] ? \"active\" : \"disabled\"\r\n        }`}\r\n      >\r\n        {minLengthErr(\"prd-name\", \"Product name\", 6)}\r\n      </div>\r\n      <div\r\n        className={`handle-product error ${\r\n          errors[\"prd-field\"] ? \"active\" : \"disabled\"\r\n        }`}\r\n      >\r\n        {minLengthErr(\"prd-field\", \"Product content\", 6)}\r\n      </div>\r\n\r\n      <div className=\"handle-product field\">\r\n        <input\r\n          name=\"prd-name\"\r\n          ref={register({\r\n            required: true,\r\n            minLength: {\r\n              value: 6,\r\n              message: minLenghtMsg(\"Product Name\", 6),\r\n            },\r\n          })}\r\n          type=\"text\"\r\n          placeholder=\"Product name\"\r\n        />\r\n      </div>\r\n      <div className=\"handle-product field\">\r\n        <select ref={register} name=\"method\">\r\n          <option value=\"Simple Text\">Simple Text</option>\r\n          <option value=\"Combos\">Combos</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"handle-product field\">\r\n        <textarea\r\n          name=\"prd-field\"\r\n          ref={register({\r\n            required: true,\r\n            minLength: {\r\n              value: 30,\r\n              message: minLenghtMsg(\"Product content\", 30),\r\n            },\r\n          })}\r\n          placeholder=\"Product content\"\r\n          maxLength=\"4096\"\r\n        />\r\n      </div>\r\n      <div className=\"handle-product field\">\r\n        <Button type=\"submit\">Create</Button>\r\n        {/* <input type=\"submit\" value=\"Add now\" /> */}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default HandleProduct;\r\n","import HandleProduct from \"../components/HandleProduct\";\r\nimport \"../styles/new_product.css\";\r\n\r\nexport default function NewProduct() {\r\n  return (\r\n    <div className=\"new-product body center\">\r\n      <div className=\"new-product title\">New Product</div>\r\n      <div className=\"new-product fields\">\r\n        <HandleProduct />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, requiresAuth, ...rest }) => {\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [isAuth, setAuth] = useState(false);\r\n\r\n  const verifyToken = () =>\r\n    new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", \"http://localhost:5000/validate-token\", true);\r\n      xhr.withCredentials = true;\r\n      xhr.onload = (e) => resolve(e.target.status);\r\n      xhr.send();\r\n    });\r\n\r\n  useEffect(() => {\r\n    async function renderRoute() {\r\n      setLoading(false);\r\n      (await verifyToken()) === 200 && setAuth(true);\r\n    }\r\n    renderRoute();\r\n  }, []);\r\n\r\n  if (isLoading) return null;\r\n  else {\r\n    if ((!isAuth && !requiresAuth) || (isAuth && requiresAuth))\r\n      return <Route {...rest} render={(props) => <Component {...props} />} />;\r\n    else if (isAuth && !requiresAuth) return <Redirect to=\"/dashboard\" />;\r\n    else if (!isAuth && requiresAuth) return <Redirect to=\"/login\" />;\r\n  }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./views/Login\";\nimport NewProduct from \"./views/NewProduct\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <ProtectedRoute\n          exact\n          path=\"/login\"\n          component={Login}\n          requiresAuth={false}\n        />\n        <Route exact path=\"/new-product\" component={NewProduct} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}